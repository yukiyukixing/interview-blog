(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{297:function(t,a,s){t.exports=s.p+"assets/img/js.5aba1a3f.png"},312:function(t,a,s){"use strict";s.r(a);var n=s(10),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_2-react"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-react"}},[t._v("#")]),t._v(" 2.React")]),t._v(" "),a("h2",{attrs:{id:"_1-react的fiber架构-⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-react的fiber架构-⭐"}},[t._v("#")]),t._v(" 1.React的fiber架构 ⭐")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.react fiber架构：fiber架构本质上是一种数据结构，其实是棵树。然后fiber分两个阶段：协调阶段和提交阶段。协调阶段做的事情就是将虚拟dom转成fiber结构，转的过程中知道哪些dom是更新了的，并打上对应的变更标签，然后这个转的过程是可以中断的，因为它是通过链表去处理这颗树的，每个fiber节点有父节点，兄弟节点以及子节点，所以可以中断，然后关键的点是每个节点的更新可以分配到浏览器每帧的空闲时间里，这里有一个函数，requestIdleCallback，这个函数可以让任务在每帧的空闲时间执行，当然react实现的时候用的不是这个函数，而是自己模拟了一个拥有requestIdleCallback这样功能的函数，因为requestIdleCallback浏览器兼容性有问题，所以react自己模拟了一个。协调阶段是将虚拟dom转成fiber数据结构，这个阶段是可以中断的，第二个是提交阶段，将fiber数据结构转成真实的dom,这个阶段是不可以中断的，因为协调阶段已经将要增删改的dom都算好了，所以提交阶段就会很快。")])]),t._v(" "),a("li",[a("p",[t._v("2.requestIdleCallback：在浏览器空闲时间被调用，有两个参数，第一个是回调函数，第二个是timeout，在timeout毫秒后没被调用，那么将加入事件循环中排队。")])]),t._v(" "),a("li",[a("p",[t._v("3.react16之前的stack架构实现虚拟dom转成真实dom，是采用循环递归的方式，这个过程是不可中断的，如果你的虚拟dom树很大的话，那页面就得等待，主线程一直被占用，而且这个过程不可被打断。")])]),t._v(" "),a("li",[a("p",[t._v("4.浏览器一帧里面会做哪些工作？")])])]),t._v(" "),a("blockquote",[a("p",[t._v("标准屏幕刷新率下面（1秒60帧），那么每帧也就是16.6ms")])]),t._v(" "),a("p",[t._v("浏览器在一帧里面会依次执行：")]),t._v(" "),a("p",[t._v("输入事件（阻塞输入事件，非阻塞输入事件） => 定时器 => 开始帧 => requestAnimationFrame => 计算样式，更新布局，布局 => 绘制 => 空闲阶段")]),t._v(" "),a("p",[a("img",{attrs:{src:s(297),alt:"JS.png"}})]),t._v(" "),a("h2",{attrs:{id:"_2-react中的diff算法-⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-react中的diff算法-⭐"}},[t._v("#")]),t._v(" 2.React中的diff算法 ⭐")]),t._v(" "),a("p",[t._v("React diff算法是react虚拟dom系统的核心，它允许react快速确定虚拟dom树上的哪些部分需要更新，从而使得UI更新非常的高效。")]),t._v(" "),a("h1",{attrs:{id:"_1-同级比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-同级比较"}},[t._v("#")]),t._v(" 1.同级比较")]),t._v(" "),a("ul",[a("li",[t._v("React 不会进行跨层级的 DOM 比较。它只比较同一层级的元素。")])]),t._v(" "),a("h1",{attrs:{id:"_2-元素类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-元素类型"}},[t._v("#")]),t._v(" 2.元素类型")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.当在两棵树的相同位置找到两个不同类型的元素时，React 会直接销毁旧节点及其子节点，并从头开始创建新节点。")])]),t._v(" "),a("li",[a("p",[t._v("2.类型相同，复用节点：如果两个元素是相同类型的，React 会保留该 DOM 节点，并仅更新变化的属性。并递归地对其子节点进行比较。")])])]),t._v(" "),a("h1",{attrs:{id:"_3-keys-的重要性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-keys-的重要性"}},[t._v("#")]),t._v(" 3.Keys 的重要性")]),t._v(" "),a("ul",[a("li",[t._v("当在数组中渲染子节点时，必须为每个子节点分配一个稳定的 key 值。通过为每个节点分配一个 key，React 可以使用这个 key 来识别那些在不同的渲染中仍然保持不变的元素。")])]),t._v(" "),a("blockquote",[a("p",[t._v("如果你没有设置key，react内部会默认使用元素的索引作为它们的key。")])]),t._v(" "),a("blockquote",[a("p",[t._v("如果设置一个随机key会怎样？")])]),t._v(" "),a("p",[t._v("（1）性能下降：")]),t._v(" "),a("ul",[a("li",[t._v("每次组件渲染时，随机 key 都会改变，即使实际上渲染的数据没有变化，这个元素也会被销毁重新创建。")])]),t._v(" "),a("p",[t._v("（2）状态丢失：")]),t._v(" "),a("ul",[a("li",[t._v("如果一个组件或元素依赖于本地状态或维护状态（如输入字段），每次重新渲染时使用随机 key 都会导致这个组件或元素被销毁并重新创建。")])]),t._v(" "),a("p",[t._v("（3）不一致的 DOM 行为")]),t._v(" "),a("ul",[a("li",[t._v("当使用随机 key 时，DOM 元素将会频繁地被销毁和创建，而非仅仅更新，这可能导致不可预测的行为，如焦点丢失、文本选择丢失等。")])]),t._v(" "),a("h2",{attrs:{id:"_3-react虚拟dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-react虚拟dom"}},[t._v("#")]),t._v(" 3.React虚拟dom")]),t._v(" "),a("p",[t._v("虚拟 DOM 本质上是一个 JS 对象，它反映了真实 DOM 的结构和内容。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.提供一个中间缓存，使得直接操作实际的 DOM（这通常是昂贵的操作）不再那么频繁。")])]),t._v(" "),a("li",[a("p",[t._v("2.通过对比新旧虚拟 DOM 来计算出最小的变动，从而优化实际 DOM 的更新。")])])]),t._v(" "),a("p",[t._v("虚拟dom可以让react更优雅高效的更新真实dom，虚拟dom可以让开发者不用关注dom操作，只操作数据。")]),t._v(" "),a("h2",{attrs:{id:"_4-react中的hooks-⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-react中的hooks-⭐"}},[t._v("#")]),t._v(" 4.React中的hooks ⭐")]),t._v(" "),a("p",[t._v("React Hooks 是从 React 16.8 版本开始引入的一个新特性，它允许你在不使用类组件的情况下使用 state 和其他 React 特性。Hooks 的引入使得函数组件更加强大和灵活。")]),t._v(" "),a("p",[t._v("常用的 React Hooks：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.useState：允许函数组件使用状态")])]),t._v(" "),a("li",[a("p",[t._v("2.useEffect：用于处理函数组件中的副作用")])]),t._v(" "),a("li",[a("p",[t._v("3.useLayoutEffect：与useEffect一样，只是执行时机不同，在所有的 DOM 变更之后同步执行的，在浏览器进行绘制之前。")])]),t._v(" "),a("li",[a("p",[t._v("4.useMemo：会缓存计算结果，只有当数据变化的时候才会重新计算，用户避免不必要的计算，并优化函数组件性能。")])]),t._v(" "),a("li",[a("p",[t._v("5.useCallback： 用于缓存函数实例，以避免不必要的重新渲染。用于需要传递给子组件的函数，减少子组件的重复渲染。")])]),t._v(" "),a("li",[a("p",[t._v("6.useRef：可以用来访问DOM元素，或者保存跨渲染周期的数据，而不会触发组件的重新渲染。")])]),t._v(" "),a("li",[a("p",[t._v("7.useContext：提供一种在组件树中传递数据的方法，而不必在每个层级手动传递props。缺点是可能会导致过度渲染，只要context改变，所有使用这个context的组件都会重新渲染。")])]),t._v(" "),a("li",[a("p",[t._v("8.useReducer：用于在函数组件中管理复杂的状态逻辑。优点是可以统一管理单个组件的状态，然后有清晰的状态更新逻辑，随着迭代开发的进行，维护和更新状态逻辑将会更加容易。缺点是useReducer相对于useState更加复杂一点，没有useState直观简洁。")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'add'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cut'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" initialState "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dispatch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useReducer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reduce"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" initState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'add'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v('在 React 中，"副作用"（side effects）指的是那些超出渲染流程的操作。这些操作通常涉及与外部系统的交互，例如发起网络请求、直接操作 DOM、设置订阅以及定时器、以及异步操作等。副作用可能会影响其他组件或与外部世界交互，因此它们不能在纯渲染过程中进行。')])]),t._v(" "),a("h2",{attrs:{id:"_5-usememo、react-memo、usecallback区别-⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-usememo、react-memo、usecallback区别-⭐"}},[t._v("#")]),t._v(" 5.useMemo、React.memo、useCallback区别 ⭐")]),t._v(" "),a("h3",{attrs:{id:"_1-usememo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-usememo"}},[t._v("#")]),t._v(" 1.useMemo")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.用于缓存计算的结果，从而避免在每次渲染时重复执行昂贵的计算。")])]),t._v(" "),a("li",[a("p",[t._v("2.缺点")])]),t._v(" "),a("li",[a("p",[t._v("过度优化：在不需要优化的场景中使用 useMemo 可能是一种过度优化。对于一些轻量级的计算，重新计算的成本可能远低于记忆化的开销。")])]),t._v(" "),a("li",[a("p",[t._v("增加代码复杂度：useMemo 引入了额外的复杂性，因为你需要管理依赖数组。如果依赖项不正确，可能导致错误的行为或性能问题。")])]),t._v(" "),a("li",[a("p",[t._v("内存占用：记忆化值会在内存中占据空间。在大型应用中，过度使用 useMemo 可能会导致过多的内存占用。")])])]),t._v(" "),a("h3",{attrs:{id:"_2-usecallback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-usecallback"}},[t._v("#")]),t._v(" 2.useCallback")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.用于缓存函数实例，useCallback主要用于避免父组件渲染导致子组件不必要的渲染。")])]),t._v(" "),a("li",[a("p",[t._v("2.使用场景：当你将回调函数作为 prop 传递给子组件，特别是那些使用了 React.memo 或 shouldComponentUpdate 进行性能优化的子组件时，使用 useCallback 非常有用。如果不使用 useCallback，每次父组件渲染时都会创建一个新的函数实例，即使逻辑相同，这会导致子组件不必要的重新渲染。")])]),t._v(" "),a("li",[a("p",[t._v("3.缺点")])]),t._v(" "),a("li",[a("p",[t._v("过度优化：在许多情况下，函数的重新创建代价非常小，使用 useCallback 可能是一种过度优化。过度使用 useCallback 可能不会带来明显的性能改善，反而会增加代码的复杂性。")])]),t._v(" "),a("li",[a("p",[t._v("增加代码复杂度：useCallback 需要额外管理依赖项数组，这可能增加组件的维护难度。错误地管理依赖项可能导致 bug 或性能问题。")])]),t._v(" "),a("li",[a("p",[t._v("可能的性能损失：使用 useCallback 时，你需要在组件的渲染间保持函数的引用。这意味着 React 需要在内存中存储这些函数的引用，对于大量的函数，这可能导致额外的内存占用。")])])]),t._v(" "),a("h3",{attrs:{id:"_3-react-memo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-react-memo"}},[t._v("#")]),t._v(" 3.React.memo")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.React.memo 是一个高阶组件。它用于对组件进行性能优化，用于防止组件在相同的 props 下重新渲染。")])]),t._v(" "),a("li",[a("p",[t._v("2.缺点")])]),t._v(" "),a("li",[a("p",[t._v("浅层比较：React.memo 默认进行浅层比较 props。如果 props 是复杂对象，即使对象内容没有改变，对象的引用改变也会导致组件重新渲染。")])]),t._v(" "),a("li",[a("p",[t._v("过度使用可能导致性能问题:在不需要优化的组件上使用 React.memo 可能会带来额外的性能开销，因为即使是浅层比较也需要时间。")])]),t._v(" "),a("li",[a("p",[t._v("不适用于频繁变化的 props：对于那些经常变化的 props，使用 React.memo 可能不会带来太多性能提升，反而可能增加不必要的负担。")])])]),t._v(" "),a("h2",{attrs:{id:"_6-usestate和useref的区别-⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-usestate和useref的区别-⭐"}},[t._v("#")]),t._v(" 6.useState和useRef的区别 ⭐")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.触发渲染：useState 更新状态时会触发组件的重新渲染，而 useRef 更新 .current 属性时不会。")])]),t._v(" "),a("li",[a("p",[t._v("2.用途：useState 用于那些组件状态（通常是用户界面状态），这些状态的改变需要导致组件重新渲染。useRef 用于持久化存储数据，这些数据的改变不应该引起渲染。")])]),t._v(" "),a("li",[a("p",[t._v("3.返回值：useState 返回一个状态值和一个更新这个状态值的函数。useRef 返回一个具有 .current 属性的对象，你可以在其中存储任何值。")])])]),t._v(" "),a("h2",{attrs:{id:"_7-介绍一下-useeffect-和-uselayouteffect-⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-介绍一下-useeffect-和-uselayouteffect-⭐"}},[t._v("#")]),t._v(" 7.介绍一下 useEffect 和 useLayoutEffect ⭐")]),t._v(" "),a("h3",{attrs:{id:"_1-useeffect"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-useeffect"}},[t._v("#")]),t._v(" 1.useEffect")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("作用：useEffect 用于在组件渲染到屏幕之后执行副作用操作。这些副作用包括数据获取、订阅或手动更改 React 组件树之外的 DOM。")])]),t._v(" "),a("li",[a("p",[t._v("执行时机：useEffect 在组件渲染到屏幕之后被调用，因此不会阻塞 DOM 的更新。这对于大多数副作用是合适的，尤其是那些不需要同步到屏幕的操作。")])]),t._v(" "),a("li",[a("p",[t._v("示例用途：数据请求、设置订阅、以及任何需要在组件加载后执行且不需要立即反映在屏幕上的操作。")])])]),t._v(" "),a("h3",{attrs:{id:"_2-uselayouteffect"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-uselayouteffect"}},[t._v("#")]),t._v(" 2.useLayoutEffect")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("作用：useLayoutEffect 的使用和 useEffect 相似，但它在 DOM 更新完成后、浏览器绘制之前同步调用。这使得它可以读取 DOM 布局并同步重新渲染。")])]),t._v(" "),a("li",[a("p",[t._v("执行时机：useLayoutEffect 会在 DOM 更新后立即同步执行，但在浏览器进行任何绘制之前，这意味着你可以在浏览器绘制之前读取布局并同步更新它，避免不必要的视觉闪烁。")])]),t._v(" "),a("li",[a("p",[t._v("示例用途：用于需要同步计算和重新渲染的操作，例如测量 DOM 节点的布局、同步动画等。")])])]),t._v(" "),a("h2",{attrs:{id:"_8-说一下react中的类组件和函数式组件-⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-说一下react中的类组件和函数式组件-⭐"}},[t._v("#")]),t._v(" 8.说一下React中的类组件和函数式组件 ⭐")]),t._v(" "),a("h3",{attrs:{id:"_1-类组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-类组件"}},[t._v("#")]),t._v(" 1.类组件")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.定义方式：类组件通过扩展 React.Component 类来定义。它们通常包含一个 render 方法，用于返回 JSX。")])]),t._v(" "),a("li",[a("p",[t._v("2.状态和生命周期：类组件可以有自己的状态（this.state）和生命周期方法（如 componentDidMount, componentDidUpdate 等）。")])]),t._v(" "),a("li",[a("p",[t._v("3.示例：")])])]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyComponent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 初始化状态 */")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidMount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生命周期方法")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("Hello, World!")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("4.特点：")])]),t._v(" "),a("li",[a("p",[t._v("可以使用生命周期方法。")])]),t._v(" "),a("li",[a("p",[t._v("有自己的状态。")])]),t._v(" "),a("li",[a("p",[t._v("通常更适合大型和复杂的组件。")])])]),t._v(" "),a("h3",{attrs:{id:"_2-函数式组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-函数式组件"}},[t._v("#")]),t._v(" 2.函数式组件")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.定义方式：函数式组件是用普通 JavaScript 函数或箭头函数定义的。它们接收 props 作为参数，并返回 JSX。")])]),t._v(" "),a("li",[a("p",[t._v("2.Hooks 的使用：引入 Hooks 后，函数式组件也能够使用状态（useState）和生命周期特性（useEffect 等）。")])]),t._v(" "),a("li",[a("p",[t._v("3.示例：")])])]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initialState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useEffect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生命周期行为")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dependencies"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("Hello, World!")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("4.特点：")])]),t._v(" "),a("li",[a("p",[t._v("使用 Hooks 来管理状态和生命周期。")])]),t._v(" "),a("li",[a("p",[t._v("代码通常更简洁、易于阅读和维护。")])]),t._v(" "),a("li",[a("p",[t._v("适合大多数场景，特别是在 Hooks 引入后。")])])]),t._v(" "),a("h3",{attrs:{id:"_3-比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-比较"}},[t._v("#")]),t._v(" 3.比较")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.语法和结构：类组件使用 ES6 类语法，函数式组件则是普通的 JavaScript 函数。")])]),t._v(" "),a("li",[a("p",[t._v("2.状态和生命周期：在 Hooks 出现之前，只有类组件可以使用状态和生命周期方法。现在，函数式组件通过 Hooks 也能使用这些特性。")])]),t._v(" "),a("li",[a("p",[t._v("3.使用场景：随着 Hooks 的普及，函数式组件变得更加强大，适用于绝大多数场景。类组件在某些复杂场景或者由于历史原因（旧代码库）仍然在使用。")])])]),t._v(" "),a("h2",{attrs:{id:"_9-高阶组件-⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-高阶组件-⭐"}},[t._v("#")]),t._v(" 9.高阶组件 ⭐")]),t._v(" "),a("h3",{attrs:{id:"_1-定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-定义"}},[t._v("#")]),t._v(" 1.定义")]),t._v(" "),a("ul",[a("li",[t._v("高阶组件是一个接受组件作为参数并返回新组件的函数。")])]),t._v(" "),a("h3",{attrs:{id:"_2-应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-应用场景"}},[t._v("#")]),t._v(" 2.应用场景")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.复用逻辑：高阶组件可以帮助我们在组件之间复用逻辑，避免重复代码。如果你现在多个组件有相同的逻辑代码，你可以将这个逻辑抽离出来封装一个高阶组件，实现代码逻辑的复用。")])]),t._v(" "),a("li",[a("p",[t._v("2.加工props：高阶组件可以加工传递给组件的props，从而改变组件的行为。")])]),t._v(" "),a("li",[a("p",[t._v("3.条件渲染：高阶组件可以根据特定的条件来决定是否渲染组件。")])]),t._v(" "),a("li",[a("p",[t._v("4.提供额外功能：高阶组件可以增强现有组件的功能，如错误处理，数据获取等等。")])])]),t._v(" "),a("h2",{attrs:{id:"_10-受控组件与非受控组件-⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-受控组件与非受控组件-⭐"}},[t._v("#")]),t._v(" 10.受控组件与非受控组件 ⭐")]),t._v(" "),a("h3",{attrs:{id:"_1-受控组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-受控组件"}},[t._v("#")]),t._v(" 1.受控组件")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.定义：受控组件是其值由 React 的 state 控制的组件。每当表单数据改变时，都会通过一个事件处理函数来更新 state，然后组件会根据这个新的 state 来重新渲染。")])]),t._v(" "),a("li",[a("p",[t._v("2.特点：")])]),t._v(" "),a("li",[a("p",[t._v("数据驱动：组件的状态完全由 React 的 state 和 props 控制。")])]),t._v(" "),a("li",[a("p",[t._v("即时更新：每个状态的改变都伴随着组件的重新渲染。")])])]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" useState "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ControlledComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handleChange")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token script language-javascript"}},[a("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onChange")]),a("span",{pre:!0,attrs:{class:"token script language-javascript"}},[a("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("handleChange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-非受控组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-非受控组件"}},[t._v("#")]),t._v(" 2.非受控组件")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.定义：非受控组件是其表单数据由 DOM 本身处理的组件。在非受控组件中，数据是由 DOM 节点自己维护的，而不是将数据存储在组件的 state 中。")])]),t._v(" "),a("li",[a("p",[t._v("2.特点：")])]),t._v(" "),a("li",[a("p",[t._v("DOM 驱动：表单数据由 DOM 节点自己管理，React 不负责维护状态。")])]),t._v(" "),a("li",[a("p",[t._v("使用 ref 访问：通常通过 ref 来从 DOM 节点获取表单数据。")])])]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" useRef "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("UncontrolledComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" inputRef "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useRef")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handleSubmit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A name was submitted: '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" inputRef"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("preventDefault")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("form")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onSubmit")]),a("span",{pre:!0,attrs:{class:"token script language-javascript"}},[a("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("handleSubmit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n            ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),a("span",{pre:!0,attrs:{class:"token script language-javascript"}},[a("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("inputRef"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n            ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("submit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("Submit")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("form")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-比较-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-比较-2"}},[t._v("#")]),t._v(" 3.比较")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.数据管理：受控组件由 React 管理数据，而非受控组件由 DOM 管理数据。")])]),t._v(" "),a("li",[a("p",[t._v("2.更新方式：受控组件通过 state 和 props 实时更新，非受控组件通过 ref 在需要时获取当前值。")])]),t._v(" "),a("li",[a("p",[t._v("3.使用场景：受控组件适合于需要实时验证或控制输入内容的场景。非受控组件适合于表单数据不需要立即由 React 处理，或者在表单提交时处理数据的场景。")])])]),t._v(" "),a("h3",{attrs:{id:"_4-选择依据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-选择依据"}},[t._v("#")]),t._v(" 4.选择依据")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.受控组件更适合于实现更复杂的表单逻辑，如实时验证。")])]),t._v(" "),a("li",[a("p",[t._v("2.非受控组件更适合于不需要紧密集成到 React 应用状态中的表单。")])])]),t._v(" "),a("blockquote",[a("p",[t._v("React 推荐使用受控组件来实现表单，因为这样可以更好地控制组件的状态和行为。然而，非受控组件在某些场景下（如对性能要求极高的场合）可能更为简便。")])]),t._v(" "),a("h2",{attrs:{id:"_11-react18有哪些升级-⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-react18有哪些升级-⭐"}},[t._v("#")]),t._v(" 11.React18有哪些升级 ⭐")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://zh-hans.react.dev/blog/2022/03/29/react-v18",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("1.并发渲染")])]),t._v(" "),a("p",[t._v("在React18之前，所有任务都被视为急迫任务，react18引入了并发模式，在这个模式下，渲染是可以中断的，高优先级的任务可以优先渲染更新。开启并发模式只需要将之前的ReactDom.render换成ReactDom.createRoot这个新的api即可。")]),t._v(" "),a("ul",[a("li",[t._v("2.批量更新")])]),t._v(" "),a("p",[t._v("在React 18 之前，我们只在 React 事件处理函数 中进行批处理更新。默认情况下，在promise、setTimeout、原生事件处理函数中、或任何其它事件内的更新都不会进行批处理。React18之后，默认自动执行批处理，多次更新合并为一次更新。")]),t._v(" "),a("h2",{attrs:{id:"_12-react-生命周期-⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-react-生命周期-⭐"}},[t._v("#")]),t._v(" 12.React 生命周期 ⭐")]),t._v(" "),a("h3",{attrs:{id:"_1-挂载阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-挂载阶段"}},[t._v("#")]),t._v(" 1.挂载阶段")]),t._v(" "),a("p",[t._v("当组件第一次被插入到 DOM 中时，它进入挂载阶段。其生命周期调用顺序如下：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.constructor(): 在 React 组件挂载之前，会调用它的构造函数。")])]),t._v(" "),a("li",[a("p",[t._v("2.static getDerivedStateFromProps(): 当组件实例化后和接收新的 props 之前被调用。")])]),t._v(" "),a("li",[a("p",[t._v("3.render(): 必需的方法，返回组件要渲染的内容。")])]),t._v(" "),a("li",[a("p",[t._v("4.componentDidMount(): 在组件挂载到 DOM 后立即调用。用于执行需要 DOM 节点的操作，如数据加载、订阅等。")])])]),t._v(" "),a("h3",{attrs:{id:"_2-更新阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-更新阶段"}},[t._v("#")]),t._v(" 2.更新阶段")]),t._v(" "),a("p",[t._v("组件在挂载后可能会多次进入更新阶段。更新可以由 props 更改、state 更改或父组件重新渲染引起。组件更新的生命周期调用顺序如下：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.static getDerivedStateFromProps(): 当组件接收新的 props 时调用。")])]),t._v(" "),a("li",[a("p",[t._v("2.shouldComponentUpdate(): 决定组件是否应该重新渲染。返回 false 可以阻止渲染。")])]),t._v(" "),a("li",[a("p",[t._v("3.render(): 与挂载阶段相同，用于渲染 UI。")])]),t._v(" "),a("li",[a("p",[t._v("4.getSnapshotBeforeUpdate(): 在最近一次渲染输出（提交到 DOM 节点）之前调用。它使得组件能在发生更改之前从 DOM 中捕获一些信息（例如，滚动位置）。")])]),t._v(" "),a("li",[a("p",[t._v("5.componentDidUpdate(): 在组件更新后立即调用。可以在此进行 DOM 操作或执行更多的数据加载。")])])]),t._v(" "),a("h3",{attrs:{id:"_3-卸载阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-卸载阶段"}},[t._v("#")]),t._v(" 3.卸载阶段")]),t._v(" "),a("p",[t._v("当组件从 DOM 中移除时调用：")]),t._v(" "),a("ul",[a("li",[t._v("1.componentWillUnmount(): 在组件卸载和销毁之前直接调用。用于执行必要的清理操作，如取消网络请求、移除事件监听器等。")])]),t._v(" "),a("h2",{attrs:{id:"_13-react的父子组件渲染过程-⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-react的父子组件渲染过程-⭐"}},[t._v("#")]),t._v(" 13.React的父子组件渲染过程 ⭐")]),t._v(" "),a("blockquote",[a("p",[t._v("React 遵循自顶向下的数据流，所以父组件会在其子组件之前完成渲染。")])]),t._v(" "),a("h3",{attrs:{id:"_1-挂载阶段-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-挂载阶段-2"}},[t._v("#")]),t._v(" 1.挂载阶段")]),t._v(" "),a("ul",[a("li",[t._v("1.父组件的 constructor 执行")]),t._v(" "),a("li",[t._v("2.父组件的 getDerivedStateFromProps 执行")]),t._v(" "),a("li",[t._v("3.父组件的 render 执行")]),t._v(" "),a("li",[t._v("4.子组件的 constructor 执行")]),t._v(" "),a("li",[t._v("5.子组件 getDerivedStateFromProps 执行")]),t._v(" "),a("li",[t._v("6.子组件 render 执行")]),t._v(" "),a("li",[t._v("7.子组件 componentDidMount 执行")]),t._v(" "),a("li",[t._v("8.父组件的 componentDidMount 执行")])]),t._v(" "),a("h3",{attrs:{id:"_2-更新阶段-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-更新阶段-2"}},[t._v("#")]),t._v(" 2.更新阶段")]),t._v(" "),a("ul",[a("li",[t._v("1.父组件的 getDerivedStateFromProps 执行")]),t._v(" "),a("li",[t._v("2.父组件 shouldComponentUpdate 执行")]),t._v(" "),a("li",[t._v("3.父组件的 render 执行")]),t._v(" "),a("li",[t._v("4.子组件 getDerivedStateFromProps 执行")]),t._v(" "),a("li",[t._v("5.子组件 shouldComponentUpdate 执行")]),t._v(" "),a("li",[t._v("6.子组件 render 执行")]),t._v(" "),a("li",[t._v("7.子组件 getSnapshotBeforeUpdate 执行")]),t._v(" "),a("li",[t._v("8.父组件 getSnapshotBeforeUpdate 执行")]),t._v(" "),a("li",[t._v("9.子组件 componentDidUpdate 执行")]),t._v(" "),a("li",[t._v("10.父组件 componentDidUpdate 执行")])]),t._v(" "),a("h3",{attrs:{id:"_3-卸载阶段-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-卸载阶段-2"}},[t._v("#")]),t._v(" 3.卸载阶段")]),t._v(" "),a("ul",[a("li",[t._v("1.父组件 componentWillUnmount 执行")]),t._v(" "),a("li",[t._v("2.子组件 componentWillUnmount 执行")]),t._v(" "),a("li",[t._v("3.移除dom")])]),t._v(" "),a("h2",{attrs:{id:"_14-reatc高阶组件父子组件渲染过程-⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-reatc高阶组件父子组件渲染过程-⭐"}},[t._v("#")]),t._v(" 14.Reatc高阶组件父子组件渲染过程 ⭐")]),t._v(" "),a("h3",{attrs:{id:"_1-初始渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-初始渲染"}},[t._v("#")]),t._v(" 1.初始渲染：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("当使用高阶组件时，初始渲染的过程通常是：首先渲染高阶组件返回的组件，然后渲染传递给高阶组件的原始组件。")])]),t._v(" "),a("li",[a("p",[t._v("高阶组件可以在渲染过程中添加额外的逻辑、状态管理或者加工props。")])])]),t._v(" "),a("h3",{attrs:{id:"_2-高阶组件更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-高阶组件更新"}},[t._v("#")]),t._v(" 2.高阶组件更新：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果高阶组件的状态或props发生变化，它将导致重新渲染。")])]),t._v(" "),a("li",[a("p",[t._v("由于高阶组件包裹了原始组件，因此任何导致高阶组件重新渲染的变化也会导致原始组件重新渲染。")])])]),t._v(" "),a("h3",{attrs:{id:"_3-原始组件更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-原始组件更新"}},[t._v("#")]),t._v(" 3.原始组件更新：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("原始组件自身的状态变化只会导致原始组件本身重新渲染，不会影响到高阶组件。")])]),t._v(" "),a("li",[a("p",[t._v("如果高阶组件传递新的props到原始组件，原始组件也会因此重新渲染。")])])]),t._v(" "),a("h3",{attrs:{id:"_4-优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-优化"}},[t._v("#")]),t._v(" 4.优化：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("与普通的父子组件相似，可以使用 React.memo、PureComponent 或 shouldComponentUpdate 等手段优化渲染性能，避免不必要的重新渲染。")])]),t._v(" "),a("li",[a("p",[t._v("特别是在高阶组件中，注意避免频繁改变传递给原始组件的props，因为这会导致额外的渲染。")])])]),t._v(" "),a("h2",{attrs:{id:"_15-高阶组件的生命周期-⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-高阶组件的生命周期-⭐"}},[t._v("#")]),t._v(" 15.高阶组件的生命周期 ⭐")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("高阶组件本身不具备独立的生命周期方法，因为它是函数，而不是组件类。")]),t._v(" 但是，它们通过返回一个新的组件来影响包裹的组件的生命周期。理解如何通过高阶组件间接影响生命周期是掌握 React 高阶组件的关键。")])]),t._v(" "),a("blockquote",[a("p",[t._v("增强组件（高阶组件返回的组件）和被包裹组件之间可以认为是父子组件的关系，他们的生命周期跟父子组件的生命周期也是相同的。")])]),t._v(" "),a("ul",[a("li",[t._v("高阶组件可以返回一个类组件，这个类组件则拥有自己的生命周期方法。通过这些生命周期方法，高阶组件可以在包裹的组件的生命周期的不同阶段执行额外的逻辑。")])]),t._v(" "),a("h3",{attrs:{id:"_1-高阶组件和包裹组件的生命周期交互"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-高阶组件和包裹组件的生命周期交互"}},[t._v("#")]),t._v(" 1.高阶组件和包裹组件的生命周期交互")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.初始化和挂载：")])]),t._v(" "),a("li",[a("p",[t._v("当使用高阶组件创建的组件被挂载时，首先会触发高阶组件返回的组件的 constructor 和 componentDidMount 方法，然后是包裹的组件的相应方法。")])]),t._v(" "),a("li",[a("p",[t._v("2.更新：")])]),t._v(" "),a("li",[a("p",[t._v("当组件的 props 或 state 发生变化时，首先会触发高阶组件返回的组件的 componentDidUpdate 方法，然后是包裹的组件的相应方法。")])]),t._v(" "),a("li",[a("p",[t._v("3.卸载：")])]),t._v(" "),a("li",[a("p",[t._v("当组件被卸载时，首先会触发高阶组件返回的组件的 componentWillUnmount 方法，然后是包裹的组件的相应方法。")])])]),t._v(" "),a("h3",{attrs:{id:"_2-注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-注意事项"}},[t._v("#")]),t._v(" 2.注意事项")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.传递 props：确保高阶组件透传所有接收到的 props 给包裹的组件，否则可能导致意外的行为。")])]),t._v(" "),a("li",[a("p",[t._v("2.静态方法：如果包裹的组件有静态方法，应在高阶组件中进行相应的处理，以确保这些方法仍然可用。")])]),t._v(" "),a("li",[a("p",[t._v("3.Ref 的转发：由于高阶组件返回的是新组件，需要使用 React.forwardRef 来转发 ref。")])])]),t._v(" "),a("h2",{attrs:{id:"_16-类组件和函数组件中怎么进行组件卸载-⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-类组件和函数组件中怎么进行组件卸载-⭐"}},[t._v("#")]),t._v(" 16.类组件和函数组件中怎么进行组件卸载 ⭐")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("组件本身的卸载可以使用条件渲染的方式控制进行卸载。")])]),t._v(" "),a("li",[a("p",[t._v("在 React 中，组件的卸载通常涉及清理操作，比如取消网络请求、移除事件监听器、清除定时器等，以防止内存泄漏。在类组件和函数组件中，组件卸载的处理方式有所不同。")])])]),t._v(" "),a("h3",{attrs:{id:"_1-类组件中的组件卸载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-类组件中的组件卸载"}},[t._v("#")]),t._v(" 1.类组件中的组件卸载")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.在类组件中，componentWillUnmount 生命周期方法用于执行组件卸载前的清理工作。这个方法是在组件从 DOM 中移除之前调用的。")])]),t._v(" "),a("li",[a("p",[t._v("2.示例：")])])]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyComponent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidMount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 挂载时的操作，例如添加事件监听")]),t._v("\n        window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'resize'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleResize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentWillUnmount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 卸载前的清理操作")]),t._v("\n        window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'resize'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleResize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handleResize")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理窗口调整大小的逻辑")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 渲染 UI")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-函数组件中的组件卸载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-函数组件中的组件卸载"}},[t._v("#")]),t._v(" 2.函数组件中的组件卸载")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.在函数组件中，可以使用 useEffect Hook 来处理副作用，包括组件的卸载逻辑。useEffect 允许你通过返回一个函数来指定卸载时的行为，这个返回的函数会在组件卸载时调用。")])]),t._v(" "),a("li",[a("p",[t._v("2.示例：")])])]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" useEffect "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useEffect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 挂载时的操作")]),t._v("\n        window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'resize'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handleResize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 卸载时的清理操作")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'resize'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handleResize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 空依赖数组表示这个 effect 只在组件挂载和卸载时运行")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handleResize")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理窗口调整大小的逻辑")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 渲染 UI")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-总结"}},[t._v("#")]),t._v(" 3.总结")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.在类组件中，使用 componentWillUnmount 方法来执行清理操作。")])]),t._v(" "),a("li",[a("p",[t._v("2.在函数组件中，使用 useEffect Hook 并在其中返回一个清理函数来处理卸载逻辑。")])])]),t._v(" "),a("h2",{attrs:{id:"_17-react和vue的区别-⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-react和vue的区别-⭐"}},[t._v("#")]),t._v(" 17.React和Vue的区别 ⭐")]),t._v(" "),a("ul",[a("li",[t._v("1.写法：")])]),t._v(" "),a("blockquote",[a("p",[t._v("React采用JSX的写法，允许在JS中混合html")])]),t._v(" "),a("blockquote",[a("p",[t._v("Vue采用基于HTML的模板语法")])]),t._v(" "),a("ul",[a("li",[t._v("2.数据可变性")])]),t._v(" "),a("blockquote",[a("p",[t._v("React采用数据不可变以及单向数据流")])]),t._v(" "),a("blockquote",[a("p",[t._v("Vue采用的是响应式数据的机制，数据更新视图自动更新。")])]),t._v(" "),a("ul",[a("li",[t._v("3.指令系统")])]),t._v(" "),a("blockquote",[a("p",[t._v("React没有指令的概念，所有事情都通过JS和JSX完成")])]),t._v(" "),a("blockquote",[a("p",[t._v("Vue有一系列内置的指令，例如：v-if、v-for")])]),t._v(" "),a("p",[t._v("相对而言，Vue提供了更多的封装和内置功能，使得开发者可以更快地上手和开发。而React则更加的灵活，允许开发者选择他们需要的工具和库。")]),t._v(" "),a("h2",{attrs:{id:"_18-react的状态管理库redux-⭐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-react的状态管理库redux-⭐"}},[t._v("#")]),t._v(" 18.React的状态管理库Redux ⭐")]),t._v(" "),a("p",[t._v("redux是react的一个状态管理库。")]),t._v(" "),a("p",[t._v("Redux 的三大原则：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.单一数据源：应用的状态存储在唯一的 store 中。")])]),t._v(" "),a("li",[a("p",[t._v("2.状态是只读的：唯一改变状态的方式是触发 action。")])]),t._v(" "),a("li",[a("p",[t._v("2.使用纯函数执行修改：为了指定 action 如何改变状态，你需要编写 reducers。")])])]),t._v(" "),a("p",[t._v("常用概念：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.Actions：描述发生了什么的对象。")])]),t._v(" "),a("li",[a("p",[t._v("2.Reducers：指定每个 action 如何改变应用状态的函数。")])]),t._v(" "),a("li",[a("p",[t._v("3.Store：将 Actions 和 Reducers 绑定在一起的对象。")])])]),t._v(" "),a("p",[t._v("Redux 通过解耦状态和 UI，使得状态管理更加明确和可预测。但也因为其模式和约束，对于一些简单的应用，使用 Redux 可能会显得过于复杂。不过，在大型应用和复杂状态管理场景下，Redux 的优势就显现出来了。")]),t._v(" "),a("h2",{attrs:{id:"_19-react-的主要特点是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-react-的主要特点是什么"}},[t._v("#")]),t._v(" 19.React 的主要特点是什么?")]),t._v(" "),a("h3",{attrs:{id:"_1-声明式编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-声明式编程"}},[t._v("#")]),t._v(" 1.声明式编程")]),t._v(" "),a("p",[t._v("更多的关注目标是什么做什么而不是怎么做，声明式编程相对的是命令式编程，命令式编程强调的是怎么做，一步步的达到结果。命令式编程通常更直接、更具体，涉及到详细的步骤和逻辑。而声明式编程更加抽象，你只需描述想要的结果，框架或库会处理背后的逻辑。React 的声明式方法通常使得代码更易于维护和理解，尤其是在构建大型或复杂的应用时。")]),t._v(" "),a("h3",{attrs:{id:"_2-组件化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-组件化"}},[t._v("#")]),t._v(" 2.组件化")]),t._v(" "),a("p",[t._v("React的应用是由多个组件组成的。组件可以被看作是独立的、可重复使用的代码块，它们各自管理自己的状态和渲染。")]),t._v(" "),a("h3",{attrs:{id:"_3-单向数据流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-单向数据流"}},[t._v("#")]),t._v(" 3.单向数据流")]),t._v(" "),a("p",[t._v("React 采用单向数据流，其中父组件向子组件传递数据。这使得数据流动清晰、可预测，便于理解和调试。")]),t._v(" "),a("h3",{attrs:{id:"_4-虚拟dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-虚拟dom"}},[t._v("#")]),t._v(" 4.虚拟DOM")]),t._v(" "),a("p",[t._v("虚拟DOM是React用来提高性能的核心概念之一。它是一个在内存中的DOM的轻量级表示。当组件的状态改变时，React创建一个新的虚拟DOM树并与前一个树进行比较，然后决定如何进行有效的更新。")]),t._v(" "),a("h2",{attrs:{id:"_20-react-中-ref-的作用是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20-react-中-ref-的作用是什么"}},[t._v("#")]),t._v(" 20.React 中 ref 的作用是什么？")]),t._v(" "),a("ul",[a("li",[t._v("1.允许直接访问 DOM 元素或组件实例。")])]),t._v(" "),a("h2",{attrs:{id:"_21-说一下react-中的-props"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_21-说一下react-中的-props"}},[t._v("#")]),t._v(" 21.说一下React 中的 props?")]),t._v(" "),a("p",[t._v("React是单向数据流的，而父组件给子组件传递数据就是使用props的。")]),t._v(" "),a("p",[t._v("props特性：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.props是只读的，这意味着在一个组件内部，你不应该修改props。")])]),t._v(" "),a("li",[a("p",[t._v("2.传递数据和函数：不仅可以传递数据，还可以传递函数，从而允许子组件与父组件交互。")])]),t._v(" "),a("li",[a("p",[t._v("3.默认 Props：React 允许设置默认 props。这是当父组件没有提供某个 prop 时，组件可以有一个默认值。")])])]),t._v(" "),a("h2",{attrs:{id:"_22-状态和属性有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_22-状态和属性有什么区别"}},[t._v("#")]),t._v(" 22.状态和属性有什么区别?")]),t._v(" "),a("h3",{attrs:{id:"_1-状态-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-状态-state"}},[t._v("#")]),t._v(" 1.状态（State）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.定义：状态是组件内部维护的数据，它可以在组件内部被改变。状态是组件的私有属性，只能在定义它的组件内部访问和修改。")])]),t._v(" "),a("li",[a("p",[t._v("2.用途：状态用于存储组件的动态数据和控制组件的行为。当组件的状态改变时，组件会重新渲染。")])]),t._v(" "),a("li",[a("p",[t._v("3.特点：")])]),t._v(" "),a("li",[a("p",[t._v("可变的：组件可以改变自己的状态。")])]),t._v(" "),a("li",[a("p",[t._v("本地化：状态通常只在定义它的组件内部使用。")])]),t._v(" "),a("li",[a("p",[t._v("初始化：通常在组件的构造函数中初始化。")])]),t._v(" "),a("li",[a("p",[t._v("4.示例：使用类组件的 this.state 或函数组件的 useState 钩子来定义状态。")])])]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyComponent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-属性-props"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-属性-props"}},[t._v("#")]),t._v(" 2.属性（Props）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.定义：属性是从父组件传递给子组件的数据。Props 是只读的，组件不能修改接收到的 props。")])]),t._v(" "),a("li",[a("p",[t._v("2.用途：Props 用于组件之间的通信，传递数据和配置。")])]),t._v(" "),a("li",[a("p",[t._v("3.特点：")])]),t._v(" "),a("li",[a("p",[t._v("只读的：组件不能修改自己接收的 props。")])]),t._v(" "),a("li",[a("p",[t._v("用于组件间通信：用于将数据从父组件传递到子组件。")])]),t._v(" "),a("li",[a("p",[t._v("可以是任何值：Props 可以是任何 JavaScript 数据类型，包括函数和 JSX。")])]),t._v(" "),a("li",[a("p",[t._v("4.示例：在父组件中定义，在子组件中通过 this.props 或直接作为参数访问。")])])]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ChildComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ParentComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ChildComponent")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("message")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("Hello from parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-区别"}},[t._v("#")]),t._v(" 3.区别")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.可变性：状态是可变的（组件内部可以改变），而属性是不可变的（组件不能改变接收到的 props）。")])]),t._v(" "),a("li",[a("p",[t._v("2.所有权：状态由组件自己维护，而属性由父组件传递给子组件。")])]),t._v(" "),a("li",[a("p",[t._v("3.用途：状态用于管理组件的内部状态和行为，属性用于配置子组件和传递数据。")])])]),t._v(" "),a("h2",{attrs:{id:"_23-setstate执行机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_23-setstate执行机制"}},[t._v("#")]),t._v(" 23.setState执行机制?")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.异步执行：在大多数情况下，setState 是异步的。这意味着在调用 setState 后，状态不会立即更新。这是为了性能优化：当在短时间内多次调用 setState 时，React 会批量处理这些更新，从而避免不必要的重渲染。")])]),t._v(" "),a("li",[a("p",[t._v("2.合并更新：当在一个事件处理函数中多次调用 setState 时，React 会将多个更新合并为一个更新。这意味着如果你多次对同一个状态字段调用 setState，只有最后一次的更新会被应用。")])]),t._v(" "),a("li",[a("p",[t._v("3.触发重新渲染：一旦状态更新（和可能的 props 更新），React 会重新执行 render 方法来确定是否需要更新 DOM。在这个过程中，React 会执行其“diff”算法来比较新旧虚拟 DOM，并只更新必要的部分。")])]),t._v(" "),a("li",[a("p",[t._v("4.回调：类组件中 setState 可以接受一个可选的第二个参数，这是一个在状态更新和组件渲染之后执行的回调函数。")])])]),t._v(" "),a("blockquote",[a("p",[t._v("React18有个批量更新的功能，不管是react本身的事件函数还是原生事件函数又或是setTimeout、promise then的操作中，setState都会批量合并更新，减少渲染的次数。")])]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" useState "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createRoot "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-dom/client'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("App")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("count1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setCount1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handleOnClick")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// setTimeout(() => {")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   setCount({ data: count.data + 1 })")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   setCount1({ data: count1.data + 1 })")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }, 0)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCount1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" count1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'执行次数'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("count1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onClick")]),a("span",{pre:!0,attrs:{class:"token script language-javascript"}},[a("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("handleOnClick"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("点击")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" root "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRoot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("上面这个例子在React18中，两次setState不管是不是在setTimeout中，'执行次数' 这个输出都只会打印一次，也就是只有一次渲染。\n而在React17中，如果在setTimeout中进行2次setState那么 '执行次数' 就会被打印2次，也就是这个组件会进行两次渲染，不会批量合并更新。")]),t._v(" "),a("h2",{attrs:{id:"_24-react-router工作原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_24-react-router工作原理"}},[t._v("#")]),t._v(" 24.React-Router工作原理")]),t._v(" "),a("ul",[a("li",[t._v("React-Router 的工作原理是通过监听浏览器地址栏的变化，并根据当前 URL 动态地渲染一组 React 组件。这个过程完全在客户端上完成，所以 React-Router 是一个单页应用（SPA）的路由解决方案。")])]),t._v(" "),a("h2",{attrs:{id:"_25-react代码层面有哪些性能优化的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_25-react代码层面有哪些性能优化的方式"}},[t._v("#")]),t._v(" 25.React代码层面有哪些性能优化的方式？")]),t._v(" "),a("h3",{attrs:{id:"_1-使用-react-memo-对函数组件进行优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-使用-react-memo-对函数组件进行优化"}},[t._v("#")]),t._v(" 1.使用 React.memo 对函数组件进行优化")]),t._v(" "),a("ul",[a("li",[t._v("React.memo：类似于 PureComponent，但用于函数组件。它可以防止不必要的渲染，如果组件的 props 没有发生变化，就不会重新渲染。")])]),t._v(" "),a("h3",{attrs:{id:"_2-使用-usecallback-和-usememo-钩子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用-usecallback-和-usememo-钩子"}},[t._v("#")]),t._v(" 2.使用 useCallback 和 useMemo 钩子")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("useCallback：用于缓存函数，避免不必要的重新创建函数实例。")])]),t._v(" "),a("li",[a("p",[t._v("useMemo：用于缓存计算结果，减少昂贵的计算过程。")])])]),t._v(" "),a("h3",{attrs:{id:"_3-避免在渲染方法中创建新的对象或函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-避免在渲染方法中创建新的对象或函数"}},[t._v("#")]),t._v(" 3.避免在渲染方法中创建新的对象或函数")]),t._v(" "),a("ul",[a("li",[t._v("避免在 render 方法或函数组件内部直接定义新的对象、数组或函数，因为这会在每次渲染时创建新的引用，导致子组件不必要的重新渲染。")])]),t._v(" "),a("h3",{attrs:{id:"_4-适当使用-fragment-和-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-适当使用-fragment-和-key"}},[t._v("#")]),t._v(" 4.适当使用 Fragment 和 Key")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.使用 React.Fragment 避免额外的 DOM 层级，减少 DOM 节点数量。")])]),t._v(" "),a("li",[a("p",[t._v("2.在渲染列表时正确使用 key，确保 React 可以有效地识别和重新使用 DOM 元素。")])])]),t._v(" "),a("h3",{attrs:{id:"_5-延迟组件加载-懒加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-延迟组件加载-懒加载"}},[t._v("#")]),t._v(" 5.延迟组件加载（懒加载）")]),t._v(" "),a("ul",[a("li",[t._v("使用 React.lazy 和 Suspense 实现组件的懒加载，尤其适用于大型组件或在首次渲染时不必立即展示的组件。")])]),t._v(" "),a("h3",{attrs:{id:"_6-避免不必要的-dom-操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-避免不必要的-dom-操作"}},[t._v("#")]),t._v(" 6.避免不必要的 DOM 操作")]),t._v(" "),a("ul",[a("li",[t._v("尽量减少直接的 DOM 操作，让 React 控制 DOM 更新。")])]),t._v(" "),a("h2",{attrs:{id:"_26-在组件库中当使用-forward-refs-时-你需要额外的注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_26-在组件库中当使用-forward-refs-时-你需要额外的注意"}},[t._v("#")]),t._v(" 26.在组件库中当使用 forward refs 时，你需要额外的注意?")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.forwardRef 是 React 提供的一个工具，允许组件接收并“转发”接收到的 ref 到其子组件。它对于某些组件类型，尤其是可能作为高阶组件或是库中的组件，特别有用。这是因为在很多情况下，你可能想要从父组件直接获取子组件的 DOM 节点，而不是通过中间组件。")])]),t._v(" "),a("li",[a("p",[t._v("2.在 React 中，ref 并不是一个像 props 或 state 那样的属性。这意味着你不能直接将 ref 传递给子组件，除非使用特殊的手段。这就是 forwardRef 的用武之地。")])])]),t._v(" "),a("h2",{attrs:{id:"_27-hooks的优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27-hooks的优点"}},[t._v("#")]),t._v(" 27.hooks的优点")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.增强函数组件：可以让函数组件使用react的状态，生命周期等特性。")])]),t._v(" "),a("li",[a("p",[t._v("2.副作用的简化管理：可以使用useEffect hooks更值观的管理副作用。")])]),t._v(" "),a("li",[a("p",[t._v("3.更简洁的状态管理：不需要像类组件中使用this去调用状态，只用使用useState去调用状态")])]),t._v(" "),a("li",[a("p",[t._v("4.更好的代码组织：不需要使用生命周期来组织代码，可以按逻辑组织代码。")])])]),t._v(" "),a("h2",{attrs:{id:"_28-自定义hooks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_28-自定义hooks"}},[t._v("#")]),t._v(" 28.自定义hooks")]),t._v(" "),a("h3",{attrs:{id:"_1-自定义hooks的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-自定义hooks的作用"}},[t._v("#")]),t._v(" 1.自定义hooks的作用")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.逻辑重用：自定义 Hooks 允许你在不同组件之间重用状态逻辑，而无需引入额外的组件层级。")])]),t._v(" "),a("li",[a("p",[t._v("2.简化组件：通过将复杂或可重用的逻辑移至 Hooks，可以使组件本身更简洁、更关注于渲染逻辑。")])]),t._v(" "),a("li",[a("p",[t._v("3.易于维护和测试：将逻辑封装在独立的 Hooks 中可以使代码更易于维护和测试。")])]),t._v(" "),a("li",[a("p",[t._v("4.共享状态逻辑：不仅仅是共享状态，还可以共享与之相关的任何逻辑，如数据获取、订阅、定时器等。")])])]),t._v(" "),a("h3",{attrs:{id:"_2-自定义hooks示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-自定义hooks示例"}},[t._v("#")]),t._v(" 2.自定义hooks示例")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" useEffect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" useState "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useWindowSize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerWidth"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHeight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useEffect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handleResize")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerWidth"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHeight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'resize'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handleResize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'resize'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handleResize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" size\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" useWindowSize\n")])])]),a("h2",{attrs:{id:"_29-hooks为什么只能写在顶层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_29-hooks为什么只能写在顶层"}},[t._v("#")]),t._v(" 29.hooks为什么只能写在顶层？")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.因为hooks调用需要遵循固定的调用顺序，如果你不在顶层调用，例如写在一个if条件语句中，那下次渲染可能顺序就变了，导致hooks内部处理的时候发生错误。")])]),t._v(" "),a("li",[a("p",[t._v("2.写在顶层代码的状态会更加可预测，不会出现不一致的状态。")])])]),t._v(" "),a("h2",{attrs:{id:"拓展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拓展"}},[t._v("#")]),t._v(" 拓展")]),t._v(" "),a("blockquote",[a("p",[t._v("React面试比较重要的点：")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.fiber")])]),t._v(" "),a("li",[a("p",[t._v("2.diff")])]),t._v(" "),a("li",[a("p",[t._v("3.hooks")])]),t._v(" "),a("li",[a("p",[t._v("4.高阶组件")])]),t._v(" "),a("li",[a("p",[t._v("5.对生命周期的理解")])]),t._v(" "),a("li",[a("p",[t._v("6.React与Vue对比")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);